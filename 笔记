-------------------------------------------------------------------以下为基础配置
1.
npm i -D webpack webpack-cli
2.
npm i -D path
3.
构建项目文件结构
|- /dist
  |- bundle.js
|- /node_modules
|- /src
  |- index.js
|- index.html
|- package-lock.json
|- package.json
|- README.md
|- webpack.config.js

4.
配置webpack.config.js

5.
在package.json配置一个 npm 脚本(npm script)，用于运行webpack，通过 npm run build 运行webpack进行打包
"scripts": {
    "build": "webpack"
},


6.
配置.gitignore文件取消上传node_modiles文件夹，

配置如下：
node_modules/

如果不取消上传node_modiles文件过大，到时下载项目时很麻烦
忽略后，如果是第一次构建，只需运行npm i  就可以安装对应的依赖包






----------------------------------------------------------------------以下为各个loader配置
以下出现找不到module就试试重装，有时安装完一个包另一个用不了可能有损坏，重装可能就好了


1.babel配置（加载 ES2015+ 代码，然后使用 Babel 转译为 ES5）,看官方文档
查看安装版本可以看package.json文件
出现找不到对应插件的情况可能是版本问题
例如出现找不到  @babel/plugin-*  插件说明安装错了或者没安装，要重新安装成   @babel/plugin-*
例如把babel-plugin-*卸载，重新安装@babel/plugin-*

本次就出现找不到@babel/plugin-transform-runtime
原因是安装的是 babel-plugin-transform-runtime
需要通过 卸载 npm un babel-plugin-transform-runtime  
        安装 npm i @babel/plugin-transform-runtime  
解决

查看配置是否成功可以打开IE测试es6语法

2.配置file-loader
第一步：npm install file-loader -D
第二步：配置webpack.config.js

3.style-loader  css-loader配置
第一步：npm i style-loader css-loader -D
第二步：配置webpack.config.js

出现了报错 ，但是后面配完file-loader就好了，但是即使卸载file-loader也可以运行，大概率是webpack.config.js的rules写错

4.less-loader less 配置
第一步：npm install -D less-loader less
第二步：配置webpack.config.js

5.scss 配置
第一步：cnpm install -D sass-loader node-sass
用npm下载会报错，要用cnpm下载

第二步：配置webpack.config.js
注意是 /\.scss$/  不要配成 /\.sass$/


---------------------------------------------------------------------------插件配置
1.
HtmlWebpackPlugin插件（自动生成一个引用bundle.js的html文件）
第一步：npm install --save-dev html-webpack-plugin
第二步：配置webpack.config.js添加插件
const HTMLWebpackPlugin = require('html-webpack-plugin');
plugins: [new HTMLWebpackPlugin()]



2.
模块热更新配置





